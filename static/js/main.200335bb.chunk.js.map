{"version":3,"sources":["components/Text/style.js","components/Text/Text.js","components/Spinner/Spinner.js","components/CheckBox/style.js","components/CheckBox/CheckBox.js","components/UserList/style.js","components/UserList/UserList.js","pages/Home/style.js","pages/Home/Home.js","hooks/usePeopleFetch.js","pages/Favorites/Favorites.js","theme/ThemeProvider.js","components/NavBar/NavBar.js","AppRouter.js","index.js"],"names":["Text","styled","div","size","bold","children","Typography","Spinner","color","thickness","variant","CircularProgress","CheckBox","isChecked","onChange","label","value","FormControlLabel","control","Checkbox","checked","UserList","List","User","UserInfo","UserPicture","img","SpinnerWrapper","IconButtonWrapper","isVisible","Filters","users","isLoading","setPageNumber","useState","hoveredUserId","setHoveredUserId","favorites","setFavorites","checkedBoxes","setCheckedBoxes","urlAddress","useLocation","observerForLastUser","useRef","observerOtherUsers","lastUserElement","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","list","prevPageNumber","observe","handleMouseLeave","pathname","useEffect","savedFavorites","localStorage","getItem","JSON","parse","setItem","stringify","map","key","index","country","element","includes","filter","val","length","some","location","user","ref","onMouseEnter","handleMouseEnter","onMouseLeave","src","picture","large","alt","name","title","first","last","email","street","number","city","onClick","Set","handleLikeButton","favorite","IconButton","Home","Content","Header","pageNumber","setUsers","setIsLoading","fetchUsers","a","axios","get","response","data","results","concat","usePeopleFetch","Favorites","ThemeProvider","overrides","MuiTab","root","backgroundColor","theme","React","useMemo","createMuiTheme","palette","type","primary","main","error","CssBaseline","NavBar","setValue","history","useHistory","pathName","AppBar","position","style","top","Tabs","aria-label","indicatorColor","textColor","Tab","push","AppRouter","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.200335bb.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Text = styled.div`\r\n  font-size: ${({ size }) => size};\r\n  font-weight: ${({ bold }) => (bold ? \"700\" : \"400\")};\r\n`;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport * as S from \"./style\";\r\n\r\nconst Text = ({ size = \"14px\", children, bold }) => {\r\n  return (\r\n    <Typography>\r\n      <S.Text size={size} bold={bold}>\r\n        {children}\r\n      </S.Text>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Spinner = ({ size, color, thickness, variant }) => {\r\n  return (\r\n    <CircularProgress size={size} color={color} thickness={thickness} variant={variant} />\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckBox = styled.div``;\r\n","import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport * as S from \"./style\";\r\n\r\nconst CheckBox = ({ isChecked, onChange, label, value }) => {\r\n  const handleChange = () => {\r\n    onChange && onChange(value);\r\n  };\r\n  return (\r\n    <S.CheckBox>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={isChecked} onChange={handleChange} color=\"primary\" />}\r\n        label={label}\r\n      />\r\n    </S.CheckBox>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size:10px;\r\n  overflow-x: auto;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 35px;\r\n  width: 500px;\r\n  height: calc(100vh - 270px);\r\n  margin-block-start: 30px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-height: 128px;\r\n  gap: 2px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const UserPicture = styled.img`\r\n  border-radius: 45%;\r\n`;\r\n\r\nexport const SpinnerWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n`;\r\n\r\nexport const Filters = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  & > * {\r\n    margin-inline-end: 8px;\r\n  }\r\n`;\r\n\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport Text from \"components/Text\";\r\nimport Spinner from \"components/Spinner\";\r\nimport CheckBox from \"components/CheckBox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport * as S from \"./style\";\r\n\r\nconst UserList = ({ users, isLoading, setPageNumber }) => {\r\n\r\n  const [hoveredUserId, setHoveredUserId] = useState();\r\n\r\n  // Favorites users state.\r\n  const [favorites, setFavorites] = useState([]);\r\n\r\n  // Checked boxes state.\r\n  const [checkedBoxes, setCheckedBoxes] = useState([]);\r\n\r\n  // Url address\r\n  const urlAddress = useLocation();\r\n\r\n  // The observer will check if we scroll all the way down to the last user element.\r\n  const observerForLastUser = useRef();\r\n\r\n  const observerOtherUsers = useRef();\r\n\r\n  const lastUserElement = useCallback(node => {\r\n    if (isLoading) return\r\n    if (observerForLastUser.current) observerForLastUser.current.disconnect()\r\n    observerForLastUser.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && list !== favorites) {\r\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\r\n      }\r\n    })\r\n    if (node) observerForLastUser.current.observe(node)\r\n  }, [isLoading]);\r\n\r\n  const handleCheckBoxes = (element) => {\r\n    if (!checkedBoxes.includes(element)) {\r\n      setCheckedBoxes([...checkedBoxes, element]);\r\n    } else {\r\n      setCheckedBoxes(checkedBoxes.filter(val => {\r\n        return val !== element;\r\n      }))\r\n    }\r\n  }\r\n\r\n  const handleMouseEnter = (index) => {\r\n    setHoveredUserId(index);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredUserId();\r\n  };\r\n\r\n  // Update favorites state\r\n  const handleLikeButton = (user) => {\r\n    if (!favorites.includes(user)) {\r\n      setFavorites([...new Set([...favorites, user])]);\r\n    } else {\r\n      setFavorites(favorites.filter(val => {\r\n        return val !== user;\r\n      }))\r\n    }\r\n  }\r\n\r\n  // Know from the url what list we need to render\r\n  const list = (urlAddress.pathname === \"/favorites\") ? favorites : users;\r\n\r\n  // Saved likes and update just once the favorites state\r\n  useEffect(() => {\r\n    const savedFavorites = localStorage.getItem('FavoritesUsers')\r\n    setFavorites(JSON.parse(savedFavorites))\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('FavoritesUsers', JSON.stringify(favorites))\r\n  }, [favorites]);\r\n\r\n  const countriesAndValues = [\r\n\r\n    {\r\n      'country': 'Australia',\r\n      'value': 'AU',\r\n    },\r\n    {\r\n      'country': 'Brazil',\r\n      'value': 'BR',\r\n    },\r\n    {\r\n      'country': 'Canada',\r\n      'value': 'CA',\r\n    },\r\n    {\r\n      'country': 'Denmark',\r\n      'value': 'DK',\r\n    },\r\n    {\r\n      'country': 'Finland',\r\n      'value': 'FI',\r\n    },\r\n    {\r\n      'country': 'France',\r\n      'value': 'FR',\r\n    },\r\n    {\r\n      'country': 'Germany',\r\n      'value': 'DE',\r\n    },\r\n    {\r\n      'country': 'Norway',\r\n      'value': 'NO',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <S.UserList>\r\n        <S.Filters>\r\n          {countriesAndValues.map((key, index) => {\r\n            return (\r\n              <CheckBox key={index} value={`${key.value}`} label={key.country} onChange={() => handleCheckBoxes(key.country)} />\r\n            )\r\n          })}\r\n        </S.Filters>\r\n      <S.List>\r\n        {list.filter((val) => {\r\n          if (checkedBoxes.length === 0) {\r\n            return true;\r\n          }\r\n\r\n          return checkedBoxes.some(country => {\r\n            return country === val?.location.country;\r\n          });\r\n        }).map((user, index) => {\r\n            return (\r\n              <S.User\r\n                key={index}\r\n                ref={(list.length === index + 1) ? lastUserElement : observerOtherUsers}\r\n                onMouseEnter={() => handleMouseEnter(index)}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <S.UserPicture src={user?.picture.large} alt=\"\" />\r\n                <S.UserInfo>\r\n                  <Text size=\"22px\" bold>\r\n                    {user?.name.title} {user?.name.first} {user?.name.last}\r\n                  </Text>\r\n                  <Text size=\"14px\">{user?.email}</Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.street.number} {user?.location.street.name}\r\n                  </Text>\r\n                  <Text size=\"14px\">\r\n                    {user?.location.city} {user?.location.country}\r\n                  </Text>\r\n                </S.UserInfo>\r\n                <S.IconButtonWrapper onClick={() => handleLikeButton(user)} isVisible={(index === hoveredUserId ||\r\n                  favorites.some(favorite => {\r\n                    return favorite === user;\r\n                  }))}>\r\n                  <IconButton>\r\n                    <FavoriteIcon color=\"error\" />\r\n                  </IconButton>\r\n                </S.IconButtonWrapper>\r\n              </S.User>\r\n\r\n            );\r\n        })}\r\n        {isLoading && (\r\n          <S.SpinnerWrapper>\r\n            <Spinner color=\"primary\" size=\"45px\" thickness={6} variant=\"indeterminate\" />\r\n          </S.SpinnerWrapper>\r\n        )}\r\n      </S.List>\r\n    </S.UserList>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Home = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-block-start: 100px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  max-width: 400px;\r\n  width: 100%;\r\n`;\r\n","import { React, useState } from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport { usePeopleFetch } from \"hooks\";\r\nimport * as S from \"./style\";\r\n\r\nconst Home = () => {\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n  \r\n  \r\n  const { users, isLoading } = usePeopleFetch(pageNumber);\r\n  return (\r\n    <S.Home>\r\n      <S.Content>\r\n        <S.Header>\r\n          <Text size=\"64px\" bold>\r\n            PplFinder\r\n          </Text>\r\n        </S.Header>\r\n        <UserList users={users} setPageNumber={setPageNumber} isLoading={isLoading} setPageNumber={setPageNumber} />\r\n      </S.Content>\r\n    </S.Home>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const usePeopleFetch = (pageNumber) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, [pageNumber]);\r\n\r\n  async function fetchUsers() {\r\n    setIsLoading(true);\r\n    const response = await axios.get(`https://randomuser.me/api/?results=25&page=1`);\r\n    setIsLoading(false);\r\n    if (users.length === 0) {\r\n      setUsers(response.data.results);\r\n    } else {\r\n      setUsers([...new Set([...users.concat(response.data.results)])]);\r\n    }\r\n  }\r\n\r\n  return { users, isLoading, fetchUsers };\r\n};\r\n","import React from \"react\";\r\nimport Text from \"components/Text\";\r\nimport UserList from \"components/UserList\";\r\nimport * as S from \"../Home/style\";\r\n\r\nconst Favorites = () => {\r\n\r\n    return (\r\n        <S.Home>\r\n            <S.Content>\r\n                <S.Header>\r\n                    <Text size=\"64px\" bold>\r\n                        PplFinder\r\n                    </Text>\r\n                </S.Header>\r\n                <UserList />\r\n            </S.Content>\r\n        </S.Home>\r\n    );\r\n};\r\n\r\nexport default Favorites;","import React from \"react\";\r\nimport { createMuiTheme, ThemeProvider as Provider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const overrides = {\r\n    MuiTab: {\r\n      root: {\r\n        backgroundColor: \"#303030\",\r\n      },\r\n    },\r\n  };\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createMuiTheme({\r\n        overrides,\r\n        palette: {\r\n          type: \"dark\",\r\n          primary: {\r\n            main: \"#84ffff\",\r\n          },\r\n          error: {\r\n            main: \"#f06292\",\r\n          },\r\n        },\r\n      }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Provider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nconst NavBar = () => {\r\n  const [value, setValue] = useState(0);\r\n  const history = useHistory();\r\n  const urlAddress = useLocation();\r\n  const handleClickHomeTab = () => {\r\n    setValue(0);\r\n    history.push('/')\r\n  }\r\n\r\n  const handleClickFavoritesTab = () => {\r\n    setValue(1);\r\n    history.push(\"/favorites\");\r\n  }\r\n\r\n  const pathName = (urlAddress.pathname === \"/favorites\") ? \"/favorites\" : '/';\r\n  useEffect(() => {\r\n    if(pathName === \"/favorites\") {\r\n      setValue(1);\r\n    } else {\r\n      setValue(0)\r\n    }\r\n  })\r\n\r\n\r\n  return ( \r\n    <AppBar position=\"static\" color=\"transparent\" style={{ position: \"fixed\", top: 0 }}>\r\n      <Tabs\r\n        value={value}\r\n        aria-label=\"Navigation\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n      >\r\n        <Tab label=\"Home\" index={0} onClick={handleClickHomeTab} />\r\n        <Tab label=\"Favorites\" index={1} onClick={handleClickFavoritesTab} />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Home, Favorites } from \"pages\";\r\nimport { ThemeProvider } from \"theme\";\r\nimport NavBar from \"components/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <ThemeProvider>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/favorites\" component={Favorites} />\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"AppRouter\";\r\n\r\nReactDOM.render(<AppRouter />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}